{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": { "description": "Project name, will be used in resource names" }
        },
        "functionAppName": {
            "type": "string",
            "defaultValue": "[concat('func-', parameters('projectName'))]",
            "metadata": { "description": "Function app name, will be used in resource names" }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "projjectNameNoDashes": "[replace(parameters('projectName'), '-', '')]",
        "tags": { "environment": "dev" },
        "storageAccountName": "[concat('st', variables('projjectNameNoDashes'))]",
        "appServicePlanName": "[concat('plan-', parameters('projectName'))]",
        "functionAppName": "[parameters('functionAppName')]",
        "applicationInsightsName": "[concat('appi-', parameters('projectName'))]",
        "serviceBusNamespaceName": "[concat('sb-', parameters('projectName'))]",
        "serviceBusQueueName": "[concat('sbq-', parameters('projectName'))]",
        "keyVaultName": "[concat('kv-', parameters('projectName'))]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]"


    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": { "name": "Standard_LRS" },
            "kind": "StorageV2",
            "tags": "[variables('tags')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "kind": "Linux",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "computeMode": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "identity": { "type": "SystemAssigned" },
            "tags": "[variables('tags')]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
            ],
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "linuxFxVersion": "PYTHON|3.8",
                "http20Enabled": true,
                "detailedErrorLoggingEnabled": true,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsAzureSBConnection",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        }
                    ]
                }
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "kind": "web",
            "properties": {
                "ApplicationId": "[variables('applicationInsightsName')]",
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('serviceBusNamespaceName')]",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": { "zoneRedundant": false },
            "resources": [
                {
                    "type": "Queues",
                    "apiVersion": "2017-04-01",
                    "name": "[concat(variables('serviceBusQueueName'), '-output')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "lockDuration": "PT30S",
                        "maxSizeInMegabytes": 1024,
                        "requiresDuplicateDetection": false,
                        "requiresSession": false,
                        "defaultMessageTimeToLive": "P14D",
                        "deadLetteringOnMessageExpiration": false,
                        "enableBatchedOperations": true,
                        "duplicateDetectionHistoryTimeWindow": "PT10M",
                        "maxDeliveryCount": 10,
                        "status": "Active",
                        "enablePartitioning": false,
                        "enableExpress": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "enabledForTemplateDeployment": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": [

                ],
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('appServicePlanName')]"
        },
        "appServicePlanName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "functionAppName": {
            "type": "string",
            "value": "[variables('functionAppName')]"
        },
        "applicationInsightsName": {
            "type": "string",
            "value": "[variables('applicationInsightsName')]"
        },
        "serviceBusNamespace": {
            "type": "string",
            "value": "[variables('serviceBusNamespaceName')]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        }
    }
}